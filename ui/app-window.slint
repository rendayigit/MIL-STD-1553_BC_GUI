import { Button, CheckBox, ComboBox, TextEdit } from "std-widgets.slint";
import { Rt-Sa-Wc-ComboBox } from "rt-sa-wc.slint";
import { Word-Box } from "word-box.slint";

export global guiGlobals {
    in property <int> rt;
    in property <int> sa;
    in property <int> wc;
    in property <string> bus;
}

export component AppWindow inherits Window {
    min-width: 600px;
    preferred-width: 600px;

    min-height: 400px;
    preferred-height: 400px;

    property <int> commandType: 0; // Bc->RT: 0, RT->BC:1, RT->RT:2
    callback sendPressed(int);

    VerticalLayout {
        HorizontalLayout {
            padding: 25px;
            alignment: end;

            bcToRtCheckBox := CheckBox {
                text: "BC to RT";
                checked: true;
                toggled => {
                    rtToBcCheckBox.checked = !self.checked;

                    if (bcToRtCheckBox.checked) {
                        commandType = 0;
                    }
                }
            }

            rtToBcCheckBox := CheckBox {
                text: "RT to BC";
                toggled => {
                    bcToRtCheckBox.checked = !self.checked;

                    if (rtToBcCheckBox.checked) {
                        commandType = 1;
                    }
                }
            }

            Button {
                text: "Send";
                primary: true;
                clicked => {
                    sendPressed(commandType);
                }
            }
        }

        HorizontalLayout {
            padding: 25px;
            alignment: center;

            Text {
                text: "Bus: ";
                font-size: 30px;
                vertical-alignment: center;
                horizontal-alignment: center;
            }

            busComboBox := ComboBox {
                current-value: "A";
                width: 75px;
                selected => {
                    guiGlobals.bus = self.current-value;
                }
                model: ["A", "B"];
            }

            Text {
                text: "RT: ";
                font-size: 30px;
                vertical-alignment: center;
                horizontal-alignment: center;
            }

            Rt-Sa-Wc-ComboBox {
                selected => {
                    guiGlobals.rt = self.current-value.to-float();
                }
            }

            Text {
                text: "SA: ";
                font-size: 30px;
                vertical-alignment: center;
                horizontal-alignment: center;
            }

            Rt-Sa-Wc-ComboBox {
                selected => {
                    guiGlobals.sa = self.current-value.to-float();
                }
            }

            Text {
                text: "WC: ";
                font-size: 30px;
                vertical-alignment: center;
                horizontal-alignment: center;
            }

            Rt-Sa-Wc-ComboBox {
                selected => {
                    guiGlobals.wc = self.current-value.to-float();
                }
            }
        }

        GridLayout {
            padding: 15px;
            spacing: 15px;
            
            Row{
                Word-Box {}
                Word-Box {}
                Word-Box {}
                Word-Box {}
                Word-Box {}
                Word-Box {}
                Word-Box {}
                Word-Box {}
            }
            Row{
                Word-Box {}
                Word-Box {}
                Word-Box {}
                Word-Box {}
                Word-Box {}
                Word-Box {}
                Word-Box {}
                Word-Box {}
            }
            Row{
                Word-Box {}
                Word-Box {}
                Word-Box {}
                Word-Box {}
                Word-Box {}
                Word-Box {}
                Word-Box {}
                Word-Box {}
            }
            Row{
                Word-Box {}
                Word-Box {}
                Word-Box {}
                Word-Box {}
                Word-Box {}
                Word-Box {}
                Word-Box {}
                Word-Box {}
            }
        }
    }
}
